/*
---
name: Basic state
tag:
  - forms
category:
  - "@gridonic/forms"
  - "@gridonic/forms/text"
  - "@gridonic/forms/text/basic"
sourcePath: "@gridonic/forms/src/_form-text.scss"
---

A single-line text field. Line-breaks are automatically removed from the input
value.

```html
<div class="form-text">
    <label for="input1" class="form-label label">Label</label>
    <input type="text" id="input1" class="input" placeholder="Optional field">
</div>

<br>

<div class="form-text">
    <label for="input2" class="form-label label">Label</label>
    <input type="text" id="input2" class="input" placeholder="Read only field" readonly>
</div>

<br>

<div class="form-text">
    <label for="input3" class="form-label label">
        <span class="label">What’s your favorite beverage?</span>
        <span class="hint">Mandatory field, e.g. Coca-Cola.</span>
    </label>
    <input required type="text" id="input3" class="input">
</div>

<br>

<div class="form-text -error">
    <label for="email1" class="form-label label">
        <span class="label">E-Mail</span>
        <span class="hint">e.g. elon.musk@spacex.com</span>
    </label>
    <input type="email" id="email1" class="input">
    <span class="feedback">Please provide a valid e-mail address!</span>
</div>

<br>

<div class="form-text">
    <label for="feedback" class="form-label label">
        <span class="label">Feedback</span>
        <span class="hint">Is there anything we can improve?</span>
    </label>
    <textarea id="feedback" class="input" name="feedback"></textarea>
</div>
```

*/

/*
---
name: Extended types
tag:
  - forms
category:
  - "@gridonic/forms"
  - "@gridonic/forms/text"
  - "@gridonic/forms/text/extended"
sourcePath: "@gridonic/forms/src/_form-text.scss"
---

### Date

Elements of type [date] create input fields allowing a date to be easily
entered — this includes year, month and day, but not time.

```html
<div class="form-text">
    <label for="date1" class="form-label label">Date</label>
    <input type="date"
           id="date1"
           class="input"
           value="2027-06-01"
           min="2027-04-01"
           max="2047-04-30">
</div>
```

### Datetime Local

Elements of type [datetime-local] create input fields allowing a date and time
to be easily entered — this includes year, month, day, hours, and minutes.

```html
<div class="form-text">
    <label for="datetime-local1" class="form-label label">Datetime</label>
    <input type="datetime-local"
           id="datetime-local1"
           class="input"
           value="2017-06-01T08:30">
</div>
```

### E-Mail

Elements of type [email] are used to let the user enter and edit an email
address, or, if the multiple attribute is specified, a list of email addresses.
The input value is automatically validated to ensure that it’s either empty or
a properly-formatted email address (or list of addresses) before the form can
be submitted.

⚠️ Browsers that don’t support type `email` fall back to being a standard
`text` input.

```html
<div class="form-text">
    <label for="email2" class="form-label label">E-Mail</label>
    <input type="email" id="email2" class="input" placeholder="me@example.org">
</div>
```

### Month

Elements of type [month] create input fields allowing a date to be easily
entered — this includes just year and month.

```html
<div class="form-text">
    <label for="month1" class="form-label label">Month</label>
    <input type="month" id="month1" class="input" value="2027-06">
</div>
```

### Number

Elements of type [number] are used to let the user enter a number. They include
built-in validation to reject non-numerical entries. The browser may opt to
provide stepper arrows to let the user increase and decrease the value using
their mouse or by simply tapping with a fingertip.

⚠️ Browsers that don’t support type `number` fall back to being a standard
`text` input.

```html
<div class="form-text">
    <label for="number1" class="form-label label">Number</label>
    <input type="number" id="number1" class="input" placeholder="123">
</div>
```

### Password

Elements of type [password] provide a way for the user to securely enter a
password. The element is presented as a one-line plain text editor control in
which the text is obscured so that it cannot be read, usually by replacing each
character with a symbol such as the asterisk (`*`) or a dot (`•`). This
character will vary depending on the user agent and OS.

```html
<div class="form-text">
    <label for="password1" class="form-label label">Password</label>
    <input type="password" id="password1" class="input" placeholder="Your password&hellip;">
</div>
```

### Tel

Elements of type [tel] provide a way for the user to enter a telephone number.
Line-breaks are automatically removed from the input value, but no other syntax
is enforced. You can use attributes such as `pattern` and `maxlength` to
restrict values entered in the control.

```html
<div class="form-text">
    <label for="tel1" class="form-label label">Tel</label>
    <input type="tel" id="tel1" class="input" placeholder="+1-541-754-3010">
</div>
```

### Time

Elements of type [time] create input fields allowing a time value to be easily
entered.

```html
<div class="form-text">
    <label for="time1" class="form-label label">Time</label>
    <input type="time" id="time1" class="input" value="08:30">
</div>
```

### URL

Elements of type [url] provide a way for editing an URL. The input value is
validated to contain either the empty string or a valid absolute URL before
submitting. You can use attributes such as `pattern` and `maxlength` to
restrict values entered in the control.

```html
<div class="form-text">
    <label for="url1" class="form-label label">URL</label>
    <input type="url" id="url1" class="input" placeholder="https://gridonic.ch">
</div>
```

### Week

Elements of type [week] create input fields allowing a date to be easily
entered — this includes just year and week.

```html
<div class="form-text">
    <label for="week1" class="form-label label">Week</label>
    <input type="week" id="week1" class="input" value="2027-W24">
</div>
```

[date]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date
[datetime-local]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local
[email]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email
[month]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/month
[number]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number
[password]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/password
[tel]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/tel
[time]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time
[url]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/url
[week]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/week

*/

/*
---
name: Data validation
tag:
  - forms
category:
  - "@gridonic/forms"
  - "@gridonic/forms/text"
  - "@gridonic/forms/text/validation"
sourcePath: "@gridonic/forms/src/_form-text.scss"
---

One of the features of HTML5 is the ability to validate most user data without
relying on scripts. This is done using [validation attributes] on form
elements, which allow you to specify rules for a form input like whether a
value needs to be filled in, the minimum and maximum length of the data,
whether it needs to be a number, an email address, etc., and a pattern that it
must match.

If the entered data follows all those rules, it is considered valid; if not,
it is considered invalid.

For example:

```html
<form>
    <div class="form-text">
        <label for="username1" class="form-label label">Username</label>
        <input required
               type="text"
               id="username1"
               class="input"
               pattern="^.{4,}$"
               placeholder="Must be at least 4 characters long&hellip;">
    </div>
</form>
```

⚠️ If the `novalidate` attribute is set on the `<form>` element, interactive
validation of the constraints doesn't happen.

```html
<form novalidate>
    <div class="form-text">
        <label for="username2" class="form-label label">Username</label>
        <input type="text"
               id="username2"
               class="input"
               pattern="^.{4,}$"
               placeholder="Must be at least 4 characters long&hellip;">
    </div>
</form>
```

⚠️ If you want to disable visual indication of validation errors **in general**
set `$forms-use-visual-validation` to `false`. Otherwise you can disable it
individually with `-novisual`.

Each validation pseudo-class is also available as a variant class:

- `:required` → `-required`
- `:invalid` → `-invalid`
- `:disabled` → `-disabled`
- `:read-only` → `-read-only`

### See also

- [Inline validation is problematic](https://adamsilver.io/articles/inline-validation-is-problematic/)

[validation attributes]: https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation

*/
.form-text {
    $invalid-classes: "&.-invalid";

    @if ($forms-use-visual-validation) {
        $invalid-classes: append($invalid-classes, "&:invalid", comma);
    }

    &:not(.-novisual) > .input {
        #{$invalid-classes} {
            border-color: $forms-color-error;
        }
    }

    > .label {
        margin: $forms-label-margin;
    }

    > .input {
        background-color: $forms-color-background;
        border: 1px solid $forms-color-border;
        border-radius: $forms-border-radius;
        box-shadow: none;
        color: $forms-text-color;
        display: block;
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
        outline: 0;
        padding: $forms-text-padding;
        resize: none;
        width: 100%;

        &::placeholder {
            color: rgba($forms-text-color, 0.25);
        }

        &:focus,
        &.-focus {
            border-color: $forms-color-focus;
        }

        &:required,
        &.-required {
            background-image: radial-gradient($forms-color-focus 50%, transparent 60%);
            background-size: 0.5em 0.5em;
            background-repeat: no-repeat;
            background-position: center right 0.5em;
            padding-right: 1.5em;
        }

        // @see https://stackoverflow.com/a/7730719/4628548
        &:read-only,
        &.-read-only,
        &:disabled,
        &.-disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }

        // Browser specific adjustments…
        &::-webkit-inner-spin-button {
            display: none;
        }

        &::-webkit-datetime-edit-fields-wrapper {
            padding: 0;
        }
    }

    > .feedback {
        display: none;
        margin-top: 0.25em;
    }

    &.-error {
        > .input {
            border-color: $forms-color-error;
        }

        > .feedback {
            display: block;
            color: $forms-color-error;
        }
    }
}
